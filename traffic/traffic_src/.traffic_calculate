#!/bin/bash -
#
# Used by rc script.
# This script shows the actual values of inbound or outbound traffic
# It checks monthly_file if given. It checks statistics_file if given.
#
# Parameters:
#    -n $interface -i [get_inbound_bytes script] -o [get_outbound_bytes script]
#    -m [montlhy_file] -s [statistics file]
#
#    -n -i -o are mandatory.
#
# It outputs result in the format:
#INTERFACE:$INTERFACE
#IN:$in_res
#OUT:$out_res
#
# gets the number of bytes for inbound traffic from the monthly file
#   input: 1 - interface, 2 - monthly file
#   out:   number of bytes from monthly file or exit 1

function get_monthly_ibytes() {
local interface="$1"
local monthly_f="$2"
local monthly_bytes=""
monthly_bytes=`cat "$monthly_f" | awk -F ':' '{if($1=="IN"){print $2;}}'`
  if [[ ! -n "$monthly_bytes" ]];
  then
      exit 1
  else
      echo $monthly_bytes
  fi
}

# gets the number of bytes for outbound traffic from the monthly file
#   input: 1 - interface, 2 - monthly file
#   out:   number of bytes from monthly file or exit 1
function get_monthly_obytes() {
local interface="$1"
local monthly_f="$2"
local monthly_bytes=""
$monthly_bytes=`cat "$monthly_f" | awk -F ':' '{if($1=="OUT"){print $2;}}'`
  if [[ ! -n "$monthly_bytes" ]];
  then
      exit 1
  else
      echo $monthly_bytes
  fi
}

# gets the number of bytes for inbound traffic from the statistics file
#    input: 1 - interface, 2 - statistics file.
#    out:   number of bytes  or  exit 1.
function get_saved_ibytes() {
local interface="$1"
local statistics_f="$2"
local saved_bytes=""
$saved_bytes=`cat "$statistics_f" | awk 'BEGIN {ibytes=1; ifc="'$interface'"}\
{\
	      if (NR == 1) {\
                      while(ibytes<NF) {\
                          if ($ibytes == "IBYTES") {\
                           break;\
                          }\
                          ibytes++;\
                       }\
		}\
                if (NR>1) {\
		if ($1 == ifc) {\
		  print $ibytes;\
		}\
	      }\
}'`

  if [[ ! -n "$saved_bytes" ]];
  then
      exit 1
  else
      echo $saved_bytes
  fi
}

# gets the number of bytes for outbound traffic from the statistics file
#     input: 1 - interface, 2 - statistics file.
#     out:   number of bytes  or  exit 1.
function get_saved_obytes() {
local interface="$1"
local statistics_f="$2"
local saved_bytes=""
saved_bytes=`cat "$statistics_f" | awk 'BEGIN {obytes=1; ifc="'$interface'"}\
{\
	      if (NR == 1) {\
                      while(obytes<NF) {\
                          if ($obytes == "OBYTES") {\
                           break;\
                          }\
                          obytes++;\
                       }\
		}\
                if (NR>1) {\
		if ($1 == ifc) {\
		  print $obytes;\
		}\
	      }\
}'`
  if [[ ! -n "$saved_bytes" ]];
  then
      exit 1
  else
      echo $saved_bytes
  fi
}
# --------------------------------

INTERFACE=""
GET_INBOUND_BYTES=""
GET_OUTBOUND_BYTES=""
MONTHLY_F=""
STATISTICS_F=""

in_res=0
out_res=0

while getopts n:i:o:ms option
do
       case "${option}"
       in
               n) INTERFACE="${OPTARG}"
               ;;
               i) GET_INBOUND_BYTES="${OPTARG}"
               ;;
               o) GET_OUTBOUND_BYTES="${OPTARG}"
               ;;
               m) MONTHLY_F="${OPTARG}"
               ;;
               s) STATISTICS_F="${OPTARG}"
               ;;
               *) echo "Error: wrong option" &&\
               exit 2
               ;;
       esac
done
 
in_res=`$GET_INBOUND_BYTES $INTERFACE` || exit 1
out_res=`$GET_OUTBOUND_BYTES $INTERFACE` || exit 1
if [ -s "$MONTHLY_F" ];
then
   INBOUND_M=`get_monthly_ibytes $INTERFACE "$MONTHLY_F"` || exit 1
   OUTBOUND_M=`get_monthly_obytes $INTERFACE "$MONTHLY_F"` || exit 1
  
   in_res=` echo "$in_res - $INBOUND_M" | bc`
   out_res=` echo "$out_res - $OUTBOUND_M" | bc`
   echo "INTERFACE:$INTERFACE" &&\
   echo "IN:$in_res" &&\
   echo "OUT:$out_res" &&\
   exit 0
fi

if [ -s "$STATISTICS_F" ];
then
   INBOUND_S=`get_saved_ibytes $INTERFACE "$STATISTICS_F"`
   OUTBOUND_S=`get_saved_obytes $INTERFACE "$STATISTICS_F"`
   in_res=` echo "$in_res - $INBOUND_S" | bc`
   out_res=` echo "$out_res - $OUTBOUND_S" | bc`
fi
echo "INTERFACE:$INTERFACE" &&\
echo "IN:$in_res" &&\
echo "OUT:$out_res" &&\
exit 0